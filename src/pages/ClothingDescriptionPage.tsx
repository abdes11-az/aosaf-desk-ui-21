import { Copy, RotateCcw, Save, ChevronRight } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useToast } from "@/hooks/use-toast";
import { saveDescription, generateTitleFromData } from "@/utils/saveSystem";
import { useLanguage } from "@/contexts/LanguageContext";
import { yn, opt, cond, isYes } from "@/utils/i18nHelpers";

interface ClothingDescriptionPageProps {
  data: any;
  onBack: () => void;
  onNewDescription?: () => void;
}

const ClothingDescriptionPage = ({ data, onBack, onNewDescription }: ClothingDescriptionPageProps) => {
  const { toast } = useToast();
  const { t } = useLanguage();

  const generateDescription = () => {
    let description = `๐ ${t('description.clothing_for_sale')}\n\n`;
    
    // ูุนูููุงุช ุฃุณุงุณูุฉ
    if (data.gender) {
      const genderMap: { [key: string]: string } = {
        "men": "ุฑุฌุงูู",
        "women": "ูุณุงุฆู",
        "kids": "ุฃุทูุงู",
        "unisex": "ููุฌูุณูู"
      };
      description += `๐ค ุงูููุน: ${genderMap[data.gender] || data.gender}\n`;
    }
    if (data.category) {
      description += `๐ท๏ธ ุงููุฆุฉ: ${data.category}\n`;
    }
    if (data.brand) {
      description += `๐ญ ุงููุงุฑูุฉ: ${data.brand}\n`;
    }
    
    description += "\n";
    
    // ุงูููุงุตูุงุช
    description += "๐ ุงูููุงุตูุงุช:\n";
    if (data.sizes) {
      description += `โข ุงูููุงุณุงุช ุงููุชุงุญุฉ: ${data.sizes}\n`;
    }
    if (data.customSizes) {
      description += `โข ููุงุณุงุช ุฃุฎุฑู: ${data.customSizes}\n`;
    }
    if (data.customSizes) {
      description += `๐ ููุงุณุงุช ุฃุฎุฑู: ${data.customSizes}\n`;
    }
    if (data.material) {
      const materialMap: { [key: string]: string } = {
        "cotton": "ูุทู",
        "polyester": "ุจูููุณุชุฑ",
        "wool": "ุตูู",
        "leather": "ุฌูุฏ",
        "denim": "ุฏููู",
        "silk": "ุญุฑูุฑ",
        "linen": "ูุชุงู",
        "synthetic": "ููุงุฏ ุตูุงุนูุฉ",
        "mixed": "ุฎููุท"
      };
      description += `โข ุงููุงุฏุฉ: ${materialMap[data.material] || data.material}\n`;
    }
    if (data.style) {
      const styleMap: { [key: string]: string } = {
        "formal": "ุฑุณูู",
        "casual": "ูุงุฌูุงู",
        "sport": "ุฑูุงุถู",
        "elegant": "ุฃููู",
        "vintage": "ููุงุณููู",
        "modern": "ุนุตุฑู"
      };
      description += `โข ุงูููุท: ${styleMap[data.style] || data.style}\n`;
    }
    if (data.season) {
      const seasonMap: { [key: string]: string } = {
        "summer": "ุตููู",
        "winter": "ุดุชูู",
        "spring": "ุฑุจูุนู",
        "autumn": "ุฎุฑููู",
        "all-season": "ุฌููุน ุงููุตูู"
      };
      description += `โข ุงูููุณู: ${seasonMap[data.season] || data.season}\n`;
    }
    
    description += "\n";
    
    
    // ุงูุฃููุงู
    if (data.colors && data.colors.length > 0) {
      description += `๐จ ุงูุฃููุงู ุงููุชุงุญุฉ: ${data.colors.join(", ")}\n\n`;
    }
    
    // ูุนูููุงุช ุฅุถุงููุฉ
    if (data.countryOfOrigin) {
      description += `๐ ุจูุฏ ุงูุตูุน: ${data.countryOfOrigin}\n`;
    }
    
    // ุงูุญุงูุฉ ูุงูุณุนุฑ
    if (data.condition) {
      description += `โ ${t('description.condition')}: ${cond(data.condition, t)}\n`;
    }
    
    if (data.price) {
      description += `๐ฐ ${t('description.price')}: ${data.price}\n\n`;
    }
    
    
    // ูุตู ุฅุถุงูู
    if (data.description) {
      description += `๐ ุชูุงุตูู ุฅุถุงููุฉ:\n${data.description}\n\n`;
    }
    
    // ูุนูููุงุช ุงูุชูุงุตู ูุงูุถูุงู
    if (data.contactMethod) description += `๐ ${t('description.contact_method')}: ${data.contactMethod}\n`;
    if (data.warranty) description += `๐ก๏ธ ${t('description.warranty')}: ${opt(data.warranty, t)}\n`;
    if (data.warranty === "ูุชููุฑ" && data.warrantyDuration) description += `โฐ ${t('description.warranty_duration')}: ${data.warrantyDuration}\n`;
    if (data.acceptExchange) description += `๐ ${t('description.accept_exchange')}: ${yn(data.acceptExchange, t)}\n`;
    
    description += "๐ ููุงุณุชูุณุงุฑ ูุงูุชูุงุตูุ ูุฑุฌู ุงูุงุชุตุงู";
    
    return description;
  };

  const handleCopy = () => {
    navigator.clipboard.writeText(generateDescription());
    toast({
      title: t('messages.copied_success'),
      description: t('messages.description_copied'),
    });
  };

  const handleSave = () => {
    const title = generateTitleFromData('clothing', data);
    saveDescription('clothing', title, generateDescription(), data);
    toast({
      title: t('messages.saved_success'),
      description: t('messages.description_saved'),
    });
  };

  const handleRegenerate = () => {
    if (onNewDescription) {
      onNewDescription();
    } else {
      onBack();
    }
  };

  return (
    <div className="page-content">
      <div className="flex items-center gap-3 mb-8">
        <button
          onClick={onBack}
          className="touch-button bg-accent hover:bg-surface-hover -mr-2"
        >
          <ChevronRight className="w-5 h-5 text-accent-foreground" />
        </button>
        <div>
          <h2 className="text-2xl font-bold text-foreground">๐ ูุตู ุงูููุงุจุณ</h2>
          <p className="text-muted-foreground text-sm">ุงููุตู ุงููููุดุฃ ููุทุนุฉ ุงูููุงุจุณ</p>
        </div>
      </div>
      
      <div className="bg-card border border-border rounded-lg p-6 mb-6">
        <pre className="whitespace-pre-wrap text-card-foreground font-sans text-sm leading-relaxed">
          {generateDescription()}
        </pre>
      </div>
      
      <div className="flex flex-col gap-3">
        <Button onClick={handleSave} className="w-full">
          <Save className="w-4 h-4 mr-2" />
          ุญูุธ ุงููุตู
        </Button>
        
        <Button onClick={handleCopy} variant="outline" className="w-full">
          <Copy className="w-4 h-4 mr-2" />
          ูุณุฎ ุงููุตู
        </Button>
        
        <Button onClick={handleRegenerate} variant="outline" className="w-full">
          <RotateCcw className="w-4 h-4 mr-2" />
          ุฅุนุงุฏุฉ ุฅูุดุงุก
        </Button>
      </div>
      
      <div className="mt-8 text-center">
        <p className="text-xs text-muted-foreground">
          ูุฐุง ุงููุตู ุชู ุฅูุดุงุคู ุชููุงุฆูุงู ูููููู ุชุนุฏููู ุญุณุจ ุญุงุฌุชู
        </p>
      </div>
    </div>
  );
};

export default ClothingDescriptionPage;